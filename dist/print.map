{"version":3,"sources":["webpack://printJS/webpack/universalModuleDefinition","webpack://printJS/webpack/bootstrap","webpack://printJS/./src/js/browser.js","webpack://printJS/./src/js/modal.js","webpack://printJS/./src/js/functions.js","webpack://printJS/./src/js/print.js","webpack://printJS/./src/js/pdf.js","webpack://printJS/./src/js/html.js","webpack://printJS/./src/js/raw-html.js","webpack://printJS/./src/js/image.js","webpack://printJS/./src/js/json.js","webpack://printJS/./src/js/init.js","webpack://printJS/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Browser","isFirefox","InstallTrigger","isIE","navigator","userAgent","indexOf","document","documentMode","isEdge","StyleMedia","isChrome","context","chrome","isSafari","toString","HTMLElement","toLowerCase","isIOSChrome","Modal","show","params","printModal","createElement","setAttribute","contentDiv","closeButton","appendChild","spinner","messageNode","createTextNode","modalMessage","getElementsByTagName","getElementById","addEventListener","close","parentNode","removeChild","capitalizePrint","obj","charAt","toUpperCase","slice","targetStylesMatch","styles","length","addHeader","printElement","raw","headerContainer","header","RegExp","test","innerHTML","headerElement","headerNode","headerStyle","insertBefore","childNodes","cleanUp","showModal","onLoadingEnd","onLoadingStart","URL","revokeObjectURL","printable","event","handler","removeEventListener","onPrintDialogClose","iframe","frameId","remove","performPrint","iframeElement","focus","contentWindow","execCommand","e","print","error","onError","style","visibility","left","Print","send","printFrame","onload","type","printDocument","contentDocument","body","printableElement","head","images","promises","map","image","src","location","href","Promise","resolve","pollImage","naturalWidth","complete","setTimeout","loadIframeImage","all","loadIframeImages","Array","from","then","base64","bytesArray","Uint8Array","atob","charCodeAt","createBlobAndPrint","origin","req","XMLHttpRequest","responseType","statusText","status","response","open","data","localPdf","Blob","createObjectURL","nodeType","cloneElement","console","element","clone","cloneNode","childNodesArray","ignoreElements","id","clonedChild","scanStyles","elementStyle","defaultView","getComputedStyle","targetStyles","targetStyle","getPropertyValue","maxWidth","font_size","collectStyles","tagName","getContext","drawImage","constructor","forEach","img","imageStyle","fullyQualifiedSrc","imageWrapper","Error","repeatTableHeader","properties","isArray","field","displayName","columnSize","htmlData","a","gridHeaderStyle","stringData","split","gridStyle","jsonToHTML","printTypes","fallbackPrintable","onIncompatibleBrowser","documentTitle","css","onPdfOpen","font","honorMarginPadding","honorColor","args","arguments","undefined","encodeURI","k","usedFrame","srcdoc","file","info","win","Pdf","Image","Html","RawHtml","Json","printJS"],"mappings":"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","file":"print.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"printJS\"] = factory();\n\telse\n\t\troot[\"printJS\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const Browser = {\n  // Firefox 1.0+\n  isFirefox: () => {\n    return typeof InstallTrigger !== 'undefined'\n  },\n  // Internet Explorer 6-11\n  isIE: () => {\n    return navigator.userAgent.indexOf('MSIE') !== -1 || !!document.documentMode\n  },\n  // Edge 20+\n  isEdge: () => {\n    return !Browser.isIE() && !!window.StyleMedia\n  },\n  // Chrome 1+\n  isChrome: (context = window) => {\n    return !!context.chrome\n  },\n  // At least Safari 3+: \"[object HTMLElementConstructor]\"\n  isSafari: () => {\n    return Object.prototype.toString.call(window.HTMLElement).indexOf('Constructor') > 0 ||\n        navigator.userAgent.toLowerCase().indexOf('safari') !== -1\n  },\n  // IOS Chrome\n  isIOSChrome: () => {\n    return navigator.userAgent.toLowerCase().indexOf('crios') !== -1\n  }\n}\n\nexport default Browser\n","const Modal = {\n  show (params) {\n    // Build modal\n    const modalStyle = 'font-family:sans-serif; ' +\n        'display:table; ' +\n        'text-align:center; ' +\n        'font-weight:300; ' +\n        'font-size:30px; ' +\n        'left:0; top:0;' +\n        'position:fixed; ' +\n        'z-index: 9990;' +\n        'color: #0460B5; ' +\n        'width: 100%; ' +\n        'height: 100%; ' +\n        'background-color:rgba(255,255,255,.9);' +\n        'transition: opacity .3s ease;'\n\n    // Create wrapper\n    const printModal = document.createElement('div')\n    printModal.setAttribute('style', modalStyle)\n    printModal.setAttribute('id', 'printJS-Modal')\n\n    // Create content div\n    const contentDiv = document.createElement('div')\n    contentDiv.setAttribute('style', 'display:table-cell; vertical-align:middle; padding-bottom:100px;')\n\n    // Add close button (requires print.css)\n    const closeButton = document.createElement('div')\n    closeButton.setAttribute('class', 'printClose')\n    closeButton.setAttribute('id', 'printClose')\n    contentDiv.appendChild(closeButton)\n\n    // Add spinner (requires print.css)\n    const spinner = document.createElement('span')\n    spinner.setAttribute('class', 'printSpinner')\n    contentDiv.appendChild(spinner)\n\n    // Add message\n    const messageNode = document.createTextNode(params.modalMessage)\n    contentDiv.appendChild(messageNode)\n\n    // Add contentDiv to printModal\n    printModal.appendChild(contentDiv)\n\n    // Append print modal element to document body\n    document.getElementsByTagName('body')[0].appendChild(printModal)\n\n    // Add event listener to close button\n    document.getElementById('printClose').addEventListener('click', function () {\n      Modal.close()\n    })\n  },\n  close () {\n    const printModal = document.getElementById('printJS-Modal')\n\n    if (printModal) {\n      printModal.parentNode.removeChild(printModal)\n    }\n  }\n}\n\nexport default Modal\n","import Modal from './modal'\nimport Browser from './browser'\n\nexport function addWrapper (htmlData, params) {\n  const bodyStyle = 'font-family:' + params.font + ' !important; font-size: ' + params.font_size + ' !important; width:100%;'\n  return '<div style=\"' + bodyStyle + '\">' + htmlData + '</div>'\n}\n\nexport function capitalizePrint (obj) {\n  return obj.charAt(0).toUpperCase() + obj.slice(1)\n}\n\nexport function collectStyles (element, params) {\n  const win = document.defaultView || window\n\n  // String variable to hold styling for each element\n  let elementStyle = ''\n\n  // Loop over computed styles\n  const styles = win.getComputedStyle(element, '')\n\n  for (let key = 0; key < styles.length; key++) {\n    // Check if style should be processed\n    if (params.targetStyles.indexOf('*') !== -1 || params.targetStyle.indexOf(styles[key]) !== -1 || targetStylesMatch(params.targetStyles, styles[key])) {\n      if (styles.getPropertyValue(styles[key])) elementStyle += styles[key] + ':' + styles.getPropertyValue(styles[key]) + ';'\n    }\n  }\n\n  // Print friendly defaults (deprecated)\n  elementStyle += 'max-width: ' + params.maxWidth + 'px !important; font-size: ' + params.font_size + ' !important;'\n\n  return elementStyle\n}\n\nfunction targetStylesMatch (styles, value) {\n  for (let i = 0; i < styles.length; i++) {\n    if (typeof value === 'object' && value.indexOf(styles[i]) !== -1) return true\n  }\n  return false\n}\n\nexport function addHeader (printElement, params) {\n  // Create the header container div\n  const headerContainer = document.createElement('div')\n\n  // Check if the header is text or raw html\n  if (isRawHTML(params.header)) {\n    headerContainer.innerHTML = params.header\n  } else {\n    // Create header element\n    const headerElement = document.createElement('h1')\n\n    // Create header text node\n    const headerNode = document.createTextNode(params.header)\n\n    // Build and style\n    headerElement.appendChild(headerNode)\n    headerElement.setAttribute('style', params.headerStyle)\n    headerContainer.appendChild(headerElement)\n  }\n\n  printElement.insertBefore(headerContainer, printElement.childNodes[0])\n}\n\nexport function cleanUp (params) {\n  // If we are showing a feedback message to user, remove it\n  if (params.showModal) Modal.close()\n\n  // Check for a finished loading hook function\n  if (params.onLoadingEnd) params.onLoadingEnd()\n\n  // If preloading pdf files, clean blob url\n  if (params.showModal || params.onLoadingStart) window.URL.revokeObjectURL(params.printable)\n\n  // Run onPrintDialogClose callback\n  let event = 'mouseover'\n\n  if (Browser.isChrome() || Browser.isFirefox()) {\n    // Ps.: Firefox will require an extra click in the document to fire the focus event.\n    event = 'focus'\n  }\n\n  const handler = () => {\n    // Make sure the event only happens once.\n    window.removeEventListener(event, handler)\n\n    params.onPrintDialogClose()\n\n    // Remove iframe from the DOM\n    const iframe = document.getElementById(params.frameId)\n\n    if (iframe) {\n      iframe.remove()\n    }\n  }\n\n  window.addEventListener(event, handler)\n}\n\nexport function isRawHTML (raw) {\n  const regexHtml = new RegExp('<([A-Za-z][A-Za-z0-9]*)\\\\b[^>]*>(.*?)</\\\\1>')\n  return regexHtml.test(raw)\n}\n","import Browser from './browser'\nimport { cleanUp } from './functions'\n\nconst Print = {\n  send: (params, printFrame) => {\n    // Append iframe element to document body\n    document.getElementsByTagName('body')[0].appendChild(printFrame)\n\n    // Get iframe element\n    const iframeElement = document.getElementById(params.frameId)\n\n    // Wait for iframe to load all content\n    iframeElement.onload = () => {\n      if (params.type === 'pdf') {\n        // Add a delay for Firefox. In my tests, 1000ms was sufficient but 100ms was not\n        if (Browser.isFirefox() || Browser.isSafari()) {\n          setTimeout(() => performPrint(iframeElement, params), 1000)\n        } else {\n          performPrint(iframeElement, params)\n        }\n        return\n      }\n\n      // Get iframe element document\n      let printDocument = (iframeElement.contentWindow || iframeElement.contentDocument)\n      if (printDocument.document) printDocument = printDocument.document\n\n      // Append printable element to the iframe body\n      printDocument.body.appendChild(params.printableElement)\n\n      // Add custom style\n      if (params.type !== 'pdf' && params.style) {\n        // Create style element\n        const style = document.createElement('style')\n        style.innerHTML = params.style\n\n        // Append style element to iframe's head\n        printDocument.head.appendChild(style)\n      }\n\n      // If printing images, wait for them to load inside the iframe\n      const images = printDocument.getElementsByTagName('img')\n\n      if (images.length > 0) {\n        loadIframeImages(Array.from(images)).then(() => performPrint(iframeElement, params))\n      } else {\n        performPrint(iframeElement, params)\n      }\n    }\n  }\n}\n\nfunction performPrint (iframeElement, params) {\n  try {\n    iframeElement.focus()\n\n    // If Edge or IE, try catch with execCommand\n    if (Browser.isEdge() || Browser.isIE()) {\n      try {\n        iframeElement.contentWindow.document.execCommand('print', false, null)\n      } catch (e) {\n        iframeElement.contentWindow.print()\n      }\n    } else {\n      // Other browsers\n      iframeElement.contentWindow.print()\n    }\n  } catch (error) {\n    params.onError(error)\n  } finally {\n    if (Browser.isFirefox()) {\n      // Move the iframe element off-screen and make it invisible\n      iframeElement.style.visibility = 'hidden'\n      iframeElement.style.left = '-1px'\n    }\n\n    cleanUp(params)\n  }\n}\n\nfunction loadIframeImages (images) {\n  const promises = images.map(image => {\n    if (image.src && image.src !== window.location.href) {\n      return loadIframeImage(image)\n    }\n  })\n\n  return Promise.all(promises)\n}\n\nfunction loadIframeImage (image) {\n  return new Promise(resolve => {\n    const pollImage = () => {\n      !image || typeof image.naturalWidth === 'undefined' || image.naturalWidth === 0 || !image.complete\n        ? setTimeout(pollImage, 500)\n        : resolve()\n    }\n    pollImage()\n  })\n}\n\nexport default Print\n","import Print from './print'\nimport { cleanUp } from './functions'\n\nexport default {\n  print: (params, printFrame) => {\n    // Check if we have base64 data\n    if (params.base64) {\n      const bytesArray = Uint8Array.from(atob(params.printable), c => c.charCodeAt(0))\n      createBlobAndPrint(params, printFrame, bytesArray)\n      return\n    }\n\n    // Format pdf url\n    params.printable = /^(blob|http|\\/\\/)/i.test(params.printable)\n      ? params.printable\n      : window.location.origin + (params.printable.charAt(0) !== '/' ? '/' + params.printable : params.printable)\n\n    // Get the file through a http request (Preload)\n    const req = new window.XMLHttpRequest()\n    req.responseType = 'arraybuffer'\n\n    req.addEventListener('error', () => {\n      cleanUp(params)\n      params.onError(req.statusText, req)\n\n      // Since we don't have a pdf document available, we will stop the print job\n    })\n\n    req.addEventListener('load', () => {\n      // Check for errors\n      if ([200, 201].indexOf(req.status) === -1) {\n        cleanUp(params)\n        params.onError(req.statusText, req)\n\n        // Since we don't have a pdf document available, we will stop the print job\n        return\n      }\n\n      // Print requested document\n      createBlobAndPrint(params, printFrame, req.response)\n    })\n\n    req.open('GET', params.printable, true)\n    req.send()\n  }\n}\n\nfunction createBlobAndPrint (params, printFrame, data) {\n  // Pass response or base64 data to a blob and create a local object url\n  let localPdf = new window.Blob([data], { type: 'application/pdf' })\n  localPdf = window.URL.createObjectURL(localPdf)\n\n  // Set iframe src with pdf document url\n  printFrame.setAttribute('src', localPdf)\n\n  Print.send(params, printFrame)\n}\n","import { collectStyles, addHeader } from './functions'\nimport Print from './print'\n\nexport default {\n  print: (params, printFrame) => {\n    // Get the DOM printable element\n    const printElement = isHtmlElement(params.printable) ? params.printable : document.getElementById(params.printable)\n\n    // Check if the element exists\n    if (!printElement) {\n      window.console.error('Invalid HTML element id: ' + params.printable)\n      return\n    }\n\n    // Clone the target element including its children (if available)\n    params.printableElement = cloneElement(printElement, params)\n\n    // Add header\n    if (params.header) {\n      addHeader(params.printableElement, params)\n    }\n\n    // Print html element contents\n    Print.send(params, printFrame)\n  }\n}\n\nfunction cloneElement (element, params) {\n  // Clone the main node (if not already inside the recursion process)\n  const clone = element.cloneNode()\n\n  // Loop over and process the children elements / nodes (including text nodes)\n  const childNodesArray = Array.prototype.slice.call(element.childNodes)\n  for (let i = 0; i < childNodesArray.length; i++) {\n    // Check if we are skipping the current element\n    if (params.ignoreElements.indexOf(childNodesArray[i].id) !== -1) {\n      continue\n    }\n\n    // Clone the child element\n    const clonedChild = cloneElement(childNodesArray[i], params)\n\n    // Attach the cloned child to the cloned parent node\n    clone.appendChild(clonedChild)\n  }\n\n  // Get all styling for print element (for nodes of type element only)\n  if (params.scanStyles && element.nodeType === 1) {\n    clone.setAttribute('style', collectStyles(element, params))\n  }\n\n  // Check if the element needs any state processing (copy user input data)\n  switch (element.tagName) {\n    case 'SELECT':\n      // Copy the current selection value to its clone\n      clone.value = element.value\n      break\n    case 'CANVAS':\n      // Copy the canvas content to its clone\n      clone.getContext('2d').drawImage(element, 0, 0)\n      break\n  }\n\n  return clone\n}\n\nfunction isHtmlElement (printable) {\n  // Check if element is instance of HTMLElement or has nodeType === 1 (for elements in iframe)\n  return typeof printable === 'object' && printable && (printable instanceof HTMLElement || printable.nodeType === 1)\n}\n","import Print from './print'\n\nexport default {\n  print: (params, printFrame) => {\n    // Create printable element (container)\n    params.printableElement = document.createElement('div')\n    params.printableElement.setAttribute('style', 'width:100%')\n\n    // Set our raw html as the printable element inner html content\n    params.printableElement.innerHTML = params.printable\n\n    // Print html contents\n    Print.send(params, printFrame)\n  }\n}\n","import { addHeader } from './functions'\nimport Print from './print'\nimport Browser from './browser'\n\nexport default {\n  print: (params, printFrame) => {\n    // Check if we are printing one image or multiple images\n    if (params.printable.constructor !== Array) {\n      // Create array with one image\n      params.printable = [params.printable]\n    }\n\n    // Create printable element (container)\n    params.printableElement = document.createElement('div')\n\n    // Create all image elements and append them to the printable container\n    params.printable.forEach(src => {\n      // Create the image element\n      const img = document.createElement('img')\n      img.setAttribute('style', params.imageStyle)\n\n      // Set image src with the file url\n      img.src = src\n\n      // The following block is for Firefox, which for some reason requires the image's src to be fully qualified in\n      // order to print it\n      if (Browser.isFirefox()) {\n        const fullyQualifiedSrc = img.src\n        img.src = fullyQualifiedSrc\n      }\n\n      // Create the image wrapper\n      const imageWrapper = document.createElement('div')\n\n      // Append image to the wrapper element\n      imageWrapper.appendChild(img)\n\n      // Append wrapper to the printable element\n      params.printableElement.appendChild(imageWrapper)\n    })\n\n    // Check if we are adding a print header\n    if (params.header) addHeader(params.printableElement, params)\n\n    // Print image\n    Print.send(params, printFrame)\n  }\n}\n","import { capitalizePrint, addHeader } from './functions'\nimport Print from './print'\n\nexport default {\n  print: (params, printFrame) => {\n    // Check if we received proper data\n    if (typeof params.printable !== 'object') {\n      throw new Error('Invalid javascript data object (JSON).')\n    }\n\n    // Validate repeatTableHeader\n    if (typeof params.repeatTableHeader !== 'boolean') {\n      throw new Error('Invalid value for repeatTableHeader attribute (JSON).')\n    }\n\n    // Validate properties\n    if (!params.properties || !Array.isArray(params.properties)) {\n      throw new Error('Invalid properties array for your JSON data.')\n    }\n\n    // We will format the property objects to keep the JSON api compatible with older releases\n    params.properties = params.properties.map(property => {\n      return {\n        field: typeof property === 'object' ? property.field : property,\n        displayName: typeof property === 'object' ? property.displayName : property,\n        columnSize: typeof property === 'object' && property.columnSize ? property.columnSize + ';' : 100 / params.properties.length + '%;'\n      }\n    })\n\n    // Create a print container element\n    params.printableElement = document.createElement('div')\n\n    // Check if we are adding a print header\n    if (params.header) {\n      addHeader(params.printableElement, params)\n    }\n\n    // Build the printable html data\n    params.printableElement.innerHTML += jsonToHTML(params)\n\n    // Print the json data\n    Print.send(params, printFrame)\n  }\n}\n\nfunction jsonToHTML (params) {\n  // Get the row and column data\n  const data = params.printable\n  const properties = params.properties\n\n  // Create a html table\n  let htmlData = '<table style=\"border-collapse: collapse; width: 100%;\">'\n\n  // Check if the header should be repeated\n  if (params.repeatTableHeader) {\n    htmlData += '<thead>'\n  }\n\n  // Add the table header row\n  htmlData += '<tr>'\n\n  // Add the table header columns\n  for (let a = 0; a < properties.length; a++) {\n    htmlData += '<th style=\"width:' + properties[a].columnSize + ';' + params.gridHeaderStyle + '\">' + capitalizePrint(properties[a].displayName) + '</th>'\n  }\n\n  // Add the closing tag for the table header row\n  htmlData += '</tr>'\n\n  // If the table header is marked as repeated, add the closing tag\n  if (params.repeatTableHeader) {\n    htmlData += '</thead>'\n  }\n\n  // Create the table body\n  htmlData += '<tbody>'\n\n  // Add the table data rows\n  for (let i = 0; i < data.length; i++) {\n    // Add the row starting tag\n    htmlData += '<tr>'\n\n    // Print selected properties only\n    for (let n = 0; n < properties.length; n++) {\n      let stringData = data[i]\n\n      // Support nested objects\n      const property = properties[n].field.split('.')\n      if (property.length > 1) {\n        for (let p = 0; p < property.length; p++) {\n          stringData = stringData[property[p]]\n        }\n      } else {\n        stringData = stringData[properties[n].field]\n      }\n\n      // Add the row contents and styles\n      htmlData += '<td style=\"width:' + properties[n].columnSize + params.gridStyle + '\">' + stringData + '</td>'\n    }\n\n    // Add the row closing tag\n    htmlData += '</tr>'\n  }\n\n  // Add the table and body closing tags\n  htmlData += '</tbody></table>'\n\n  return htmlData\n}\n","'use strict'\n\nimport Browser from './browser'\nimport Modal from './modal'\nimport Pdf from './pdf'\nimport Html from './html'\nimport RawHtml from './raw-html'\nimport Image from './image'\nimport Json from './json'\n\nconst printTypes = ['pdf', 'html', 'image', 'json', 'raw-html']\n\nexport default {\n  init () {\n    const params = {\n      printable: null,\n      fallbackPrintable: null,\n      type: 'pdf',\n      header: null,\n      headerStyle: 'font-weight: 300;',\n      maxWidth: 800,\n      properties: null,\n      gridHeaderStyle: 'font-weight: bold; padding: 5px; border: 1px solid #dddddd;',\n      gridStyle: 'border: 1px solid lightgray; margin-bottom: -1px;',\n      showModal: false,\n      onError: (error) => { throw error },\n      onLoadingStart: null,\n      onLoadingEnd: null,\n      onPrintDialogClose: () => {},\n      onIncompatibleBrowser: () => {},\n      modalMessage: 'Retrieving Document...',\n      frameId: 'printJS',\n      printableElement: null,\n      documentTitle: 'Document',\n      targetStyle: ['clear', 'display', 'width', 'min-width', 'height', 'min-height', 'max-height'],\n      targetStyles: ['border', 'box', 'break', 'text-decoration'],\n      ignoreElements: [],\n      repeatTableHeader: true,\n      css: null,\n      style: null,\n      scanStyles: true,\n      base64: false,\n\n      // Deprecated\n      onPdfOpen: null,\n      font: 'TimesNewRoman',\n      font_size: '12pt',\n      honorMarginPadding: true,\n      honorColor: false,\n      imageStyle: 'max-width: 100%;'\n    }\n\n    // Check if a printable document or object was supplied\n    const args = arguments[0]\n    if (args === undefined) {\n      throw new Error('printJS expects at least 1 attribute.')\n    }\n\n    // Process parameters\n    switch (typeof args) {\n      case 'string':\n        params.printable = encodeURI(args)\n        params.fallbackPrintable = params.printable\n        params.type = arguments[1] || params.type\n        break\n      case 'object':\n        params.printable = args.printable\n        params.fallbackPrintable = typeof args.fallbackPrintable !== 'undefined' ? args.fallbackPrintable : params.printable\n        params.fallbackPrintable = params.base64 ? `data:application/pdf;base64,${params.fallbackPrintable}` : params.fallbackPrintable\n        for (var k in params) {\n          if (k === 'printable' || k === 'fallbackPrintable') continue\n\n          params[k] = typeof args[k] !== 'undefined' ? args[k] : params[k]\n        }\n        break\n      default:\n        throw new Error('Unexpected argument type! Expected \"string\" or \"object\", got ' + typeof args)\n    }\n\n    // Validate printable\n    if (!params.printable) throw new Error('Missing printable information.')\n\n    // Validate type\n    if (!params.type || typeof params.type !== 'string' || printTypes.indexOf(params.type.toLowerCase()) === -1) {\n      throw new Error('Invalid print type. Available types are: pdf, html, image and json.')\n    }\n\n    // Check if we are showing a feedback message to the user (useful for large files)\n    if (params.showModal) Modal.show(params)\n\n    // Check for a print start hook function\n    if (params.onLoadingStart) params.onLoadingStart()\n\n    // To prevent duplication and issues, remove any used printFrame from the DOM\n    const usedFrame = document.getElementById(params.frameId)\n\n    if (usedFrame) usedFrame.parentNode.removeChild(usedFrame)\n\n    // Create a new iframe for the print job\n    const printFrame = document.createElement('iframe')\n\n    if (Browser.isFirefox()) {\n      // Set the iframe to be is visible on the page (guaranteed by fixed position) but hidden using opacity 0, because\n      // this works in Firefox. The height needs to be sufficient for some part of the document other than the PDF\n      // viewer's toolbar to be visible in the page\n      printFrame.setAttribute('style', 'width: 1px; height: 100px; position: fixed; left: 0; top: 0; opacity: 0; border-width: 0; margin: 0; padding: 0')\n    } else {\n      // Hide the iframe in other browsers\n      printFrame.setAttribute('style', 'visibility: hidden; height: 0; width: 0; position: absolute; border: 0')\n    }\n\n    // Set iframe element id\n    printFrame.setAttribute('id', params.frameId)\n\n    // For non pdf printing, pass an html document string to srcdoc (force onload callback)\n    if (params.type !== 'pdf') {\n      printFrame.srcdoc = '<html><head><title>' + params.documentTitle + '</title>'\n\n      // Attach css files\n      if (params.css) {\n        // Add support for single file\n        if (!Array.isArray(params.css)) params.css = [params.css]\n\n        // Create link tags for each css file\n        params.css.forEach(file => {\n          printFrame.srcdoc += '<link rel=\"stylesheet\" href=\"' + file + '\">'\n        })\n      }\n\n      printFrame.srcdoc += '</head><body></body></html>'\n    }\n\n    // Check printable type\n    switch (params.type) {\n      case 'pdf':\n        // Check browser support for pdf and if not supported we will just open the pdf file instead\n        if (Browser.isIE()) {\n          try {\n            console.info('Print.js doesn\\'t support PDF printing in Internet Explorer.')\n            const win = window.open(params.fallbackPrintable, '_blank')\n            win.focus()\n            params.onIncompatibleBrowser()\n          } catch (error) {\n            params.onError(error)\n          } finally {\n            // Make sure there is no loading modal opened\n            if (params.showModal) Modal.close()\n            if (params.onLoadingEnd) params.onLoadingEnd()\n          }\n        } else {\n          Pdf.print(params, printFrame)\n        }\n        break\n      case 'image':\n        Image.print(params, printFrame)\n        break\n      case 'html':\n        Html.print(params, printFrame)\n        break\n      case 'raw-html':\n        RawHtml.print(params, printFrame)\n        break\n      case 'json':\n        Json.print(params, printFrame)\n        break\n    }\n  }\n}\n","import './sass/index.scss'\nimport print from './js/init'\n\nconst printJS = print.init\n\nif (typeof window !== 'undefined') {\n  window.printJS = printJS\n}\n\nexport default printJS\n"],"sourceRoot":""}